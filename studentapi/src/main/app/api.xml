<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:cors="http://www.mulesoft.org/schema/mule/cors" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/cors http://www.mulesoft.org/schema/mule/cors/current/mule-cors.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd">
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration" />
    <apikit:config name="api-config" raml="api.raml" consoleEnabled="true" consolePath="console" doc:name="Router" />
    <cors:config name="Cors_Configuration" doc:name="Cors Configuration">
        <cors:origins>
            <cors:origin url="*">
                <cors:methods>
                    <cors:method>POST</cors:method>
                    <cors:method>PUT</cors:method>
                    <cors:method>DELETE</cors:method>
                    <cors:method>OPTIONS</cors:method>
                    <cors:method>GET</cors:method>
                </cors:methods>
                <cors:headers>
                    <cors:header>Content-Type</cors:header>
                </cors:headers>
            </cors:origin>
        </cors:origins>
    </cors:config>
    <sqs:config name="Amazon_SQS__Configuration" accessKey="${sqs.key}" secretKey="${sqs.secret}" defaultQueueName="${lead.queue.name}" url="${lead.queue.url}" region="USEAST1" doc:name="Amazon SQS: Configuration" />
    <sqs:config name="Amazon_SQS__Configuration2" accessKey="${sqs.key}" secretKey="${sqs.secret}" defaultQueueName="${prospect.queue.name}" url="${prospect.queue.url}" region="USEAST1" doc:name="Amazon SQS: Configuration" />
    <secure-property-placeholder:config name="Secure_Property_Placeholder" key="${securePropsKey}" location="creds.properties" doc:name="Secure Property Placeholder"/>
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <set-property doc:name="Access-Control-Allow-Origin" propertyName="Access-Control-Allow-Origin" value="*" />
        <set-property doc:name="Access-Control-Allow-Headers" propertyName="Access-Control-Allow-Headers" value="Content-Type" />
        <set-property doc:name="Access-Control-Allow-Methods" propertyName="Access-Control-Allow-Methods" value="GET, PUT, POST, DELETE, OPTIONS" />
        <cors:validate config-ref="Cors_Configuration" publicResource="false" acceptsCredentials="false" doc:name="CORS Validate" />
        <apikit:router config-ref="api-config" doc:name="APIkit Router" />
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="post:/campus/prospect:api-config">
        <object-to-string-transformer doc:name="Object to String" />
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	messageBody: write(payload,"application/json")
} as :object {
	class : "org.mule.modules.sqs.model.Message"
}]]></dw:set-payload>
        </dw:transform-message>
        <sqs:send-message config-ref="Amazon_SQS__Configuration" doc:name="Amazon SQS" />
        <logger message="#[payload]" level="INFO" doc:name="Logger" />
        <set-payload value="{&quot;status&quot;:&quot;good&quot;}" doc:name="Set Payload" />
    </flow>
    <flow name="post:/campus/lead:api-config">
        <object-to-string-transformer doc:name="Object to String" />
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	messageBody: write(payload,"application/json")
} as :object {
	class : "org.mule.modules.sqs.model.Message"
}]]></dw:set-payload>
        </dw:transform-message>
        <sqs:send-message config-ref="Amazon_SQS__Configuration2" doc:name="Amazon SQS" />
        <logger message="#[payload]" level="INFO" doc:name="Logger" />
        <set-payload value="{&quot;status&quot;:&quot;good&quot;}" doc:name="Set Payload" />
    </flow>
    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>